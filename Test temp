List<String> querymmDetail = new List<String>();

// Combined query for MixMatch details
querymmDetail.add(
    'SELECT Id, Name, MixMatch__r.Name, StartDate__c, LastModifiedDate, MM_Num1__c, MM_Price1__c, ' +
    'MM_Num2__c, MM_Price2__c, MixMatch__c, MixMatch__r.MMCode__c, RegistrationNumber__c, ' +
    'NumberOfTargetStores__c, SetSale_UnConfirmedFlag__c, Index__c, ' +
    '(SELECT Id FROM TargetStores__r LIMIT 1) ' +
    'FROM PLN_MixMatch_Detail__c ' +
    'WHERE MMCode__c <> null AND SetSale_UnConfirmedFlag__c = false AND ' +
    '((EndDate__c >= TODAY AND Linkflag__c = False AND MixMatch__r.Delete_flag__c = False) OR ' +
    '(MixMatch__r.Delete_flag__c = TRUE AND MixMatch__r.IsDeletionLinked_MM__c = false AND EndDate__c >= TODAY AND Linkflag__c = False) OR ' +
    '(MixMatch__r.IsDeletionLinked_MM__c = false AND EndDate__c < TODAY AND Linkflag__c = False))'
);

// Adding additional WHERE clauses if present
if (wheres.size() > 0) {
    querymmDetail.add('AND ' + String.join(wheres, ' AND '));
}

// Limiting results to 1000
querymmDetail.add('LIMIT 1000');
String soql = String.join(querymmDetail, ' ');

// Execute the combined query
List<PLN_MixMatch_Detail__c> allMMDetailList = Database.query(soql);

// Separate the results into new and old MixMatch details
List<PLN_MixMatch_Detail__c> newMMDetailList = new List<PLN_MixMatch_Detail__c>();
List<PLN_MixMatch_Detail__c> latestMMdetail = new List<PLN_MixMatch_Detail__c>();

for (PLN_MixMatch_Detail__c mmDetail : allMMDetailList) {
    if (mmDetail.EndDate__c < Date.today()) {
        latestMMdetail.add(mmDetail);
    } else {
        newMMDetailList.add(mmDetail);
    }
}

// Creating a map of MixMatch details by MixMatch__c for the latest details
Map<String, PLN_MixMatch_Detail__c> mapOfmmCodeMMdetail = new Map<String, PLN_MixMatch_Detail__c>();
for (PLN_MixMatch_Detail__c mmDetail : latestMMdetail) {
    if (!mapOfmmCodeMMdetail.containsKey(mmDetail.MixMatch__c)) {
        mapOfmmCodeMMdetail.put(mmDetail.MixMatch__c, mmDetail);
    }
}

// Removing duplicates from the new MixMatch details list
for (PLN_MixMatch_Detail__c mmDetail : newMMDetailList) {
    mapOfmmCodeMMdetail.remove(mmDetail.MixMatch__c);
}

// Adding remaining items from the map to the new MixMatch details list
if (!mapOfmmCodeMMdetail.values().isEmpty()) {
    newMMDetailList.addAll(mapOfmmCodeMMdetail.values());
}
